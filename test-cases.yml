---
- summary: |
    Проверка создания игры без регистрации
  requirement: |
    С главной страницы можно создать игру без регистрации
  prerequisites: |
    Пользователь не зарегистрирован
  test-data: |
    No data
  steps:
    - Нажать кнопку "TRY SIMPLE BATTLE"    
  expected-result: |
    Игра с ботом успешно создана

- summary: |
    Проверка регистрации пользователя
  requirement: |
    При вводе всх данных пользователь должен быть зарегестрирован
  prerequisites: |
    открыта страница регистрации
  test-data: |
    No data    
  steps:
    - Вводим NickName
    - Вводим email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь успешно зарегистрирован

- summary: |
    Проверка успешной авторизации
  requirement: |
    При верном вводе логине и пароля пользователь должен авторизирован на сайте
  prerequisites: |
    открыта страница входа
  test-data: |
    email = который использовался при регистрации
    Password = который использовался при регистрации   
  steps:
    - Вводим email
    - Вводим Password
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь успешно авторизирован
    
- summary: |
    Успешное создание игры с ботом
  requirement: |
    Пользователь может создать игру с ботом
  prerequisites:
    Открыта страница пользователя
  test-data: |
    Level = одна звезда
    Game Type = Whith a bot
    Time control = 10 min
    Tags = match
    Choose task by name or tags = rect_area    
  steps:
    - Нажимаем кнопку CREATE A GAME
    - Выбираем опции из test-data
    - Нажимаем кнопку Create battle
  expected-result: |
    Игра с ботом успешно создана

- summary: |
    Успешная авторизация на сайте с помощью Github
  requirement: |
    При наличии профиля на Github пользователь должен быть авторизован
  prerequisites: |
    открыта страница входа у пользователя есть профиль на Github
  test-data: |
    No data   
  steps:
    - Нажимаем на кнопку "Sign in with Github"
  expected-result: |
    Пользователь успешно авторизирован

- summary: |
    Успешная авторизация на сайте с помощью Discord
  requirement: |
    При наличии профиля на Discord пользователь должен быть авторизован
  prerequisites: |
    открыта страница входа у пользователя есть профиль на Discord
  test-data: |
    No data   
  steps:
    - Нажимаем на кнопку "Sign in with Discord"
  expected-result: |
    Пользователь успешно авторизирован

- summary: |
    Успешное создание турнира
  requirement: |
    Пользавтель может создать турнир
  prerequisites: |
    Пользователь авторизован
  test-data: |
    No data
  steps:
    - В шапке на странице пользователя нажать на 'NickName'
    - Выбрать Tournaments
    - Под заголовком 'Create a new tournament' заполнить поля
    - Под заголовком 'Create a new tournament' выбрать параметры
    - Нажать на кнопку 'Create'
  expected-result: |
    Турнир успешно создан

- summary: |
    Успешное создание игры с другом
  requirement: |
    Пользователь может создать игру с другом, увидеть сообщение об этом
  prerequisites:
    Открыта страница пользователя
  test-data: |
    Level = одна звезда
    Game Type = With a friend
    Time control = 3 min
    Choose opponent: ArtNut
    Tags = match
    Choose task by name or tags = rect_area    
  steps:
    - Нажимаем кнопку CREATE A GAME
    - Выбираем опции из test-data
    - Нажимаем кнопку Create invite
  expected-result: |
    Игра с другом успешно создана, в шапке страницы при нажатии значка с мечами появляется сообщение 'Yor invited ArtNut'

- summary: |
    Успешное отправление сообщения в общий чат
  requirement: |
    Пользователь может отправлять сообщения в общий чат
  prerequisites:
    главная страница пользователя
  test-data: |
    кнопка список General = General 
    поле 'Be nice in chat!' = Это сообщение хорошее
  steps:
    - Выбираем опции из test-data    
    - Нажимаем кнопку "Send"
  expected-result: |
    Сообщение успешно отправлено в общий чат

- summary: |
    Успешное отправление приватного сообщения пользователю в сети
  requirement: |
    Пользователь может отправлять приватое сообщение другому пользователю в сети, другой пользователь видит что сообщение приватное
  prerequisites:
    главная страница пользователя
  test-data: |
    No data 
  steps:
    - Внизу страницы возле названия 'Online players:' нажимаем на кнопку 'Send message' ввиде конверта
    - В появившемся окне 'Send private message' выбираем пользователя
    - в поле 'Be nice in chat!' = 'Hi friend!'
    - Нажимаем кнопку "Send"
  expected-result: |
    Сообщение успешно отправлено, другой пользовател в поле сообщений видит слово [private] перед NikName.

    *******

- summary: |
    Успешный набор кода в окне редактора
  requirement: |
    Пользователь должен иметь возможность набирать код в окне редактора
  prerequisites:
    открыта страница запущенной игры
  test-data: |
    No data
  steps:
    - В области редактира кода набираем код    
  expected-result: |
     Код успешно набран, код отображается в окне редактора

- summary: |
    Успешный сброс кода в окне редактора
  requirement: |
    Пользователь должен иметь возможность сбрасывать код
  prerequisites:
    Открыта страница запущенной игры
    набран код в редакторе
  test-data: |
    No data
  steps:
    - Нажимаем кнопку "Rreset editor"   
  expected-result: |
     Код успешно сбросился в окне редактора

- summary: |
    Успешная проверка решения
  requirement: |
    Пользователь может проверить решение
  prerequisites:   
    создана игра с задачей rect_area  
    открыта страница игры
  test-data: |
    код: const solution = (width, length) => {
           return width * length;
         };
  steps:
    - Вводим код в окно редактора
    - Нажимаем кнопку Run
    - Нажимаем на вкладку OUTPUT
  expected-result: |
     Успешная проверка решения, сообщение 'Yay! All tests passed!!'
